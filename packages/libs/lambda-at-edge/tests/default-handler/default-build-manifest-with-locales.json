{
  "buildId": "build-id",
  "pages": {
    "dynamic": [
      {
        "route": "/blog/[id]",
        "regex": "^\\/blog(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/customers/[customer]",
        "regex": "^\\/customers(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/customers/[customer]/profile",
        "regex": "^\\/customers(?:\\/([^\\/#\\?]+?))\\/profile[\\/#\\?]?$"
      },
      {
        "route": "/customers/[customer]/[post]",
        "regex": "^\\/customers(?:\\/([^\\/#\\?]+?))(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/customers/[...catchAll]",
        "regex": "^\\/customers(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/en/blog/[id]",
        "regex": "^\\/en\\/blog(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/en/customers/[customer]",
        "regex": "^\\/en\\/customers(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/en/customers/[customer]/profile",
        "regex": "^\\/en\\/customers(?:\\/([^\\/#\\?]+?))\\/profile[\\/#\\?]?$"
      },
      {
        "route": "/en/customers/[customer]/[post]",
        "regex": "^\\/en\\/customers(?:\\/([^\\/#\\?]+?))(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/en/customers/[...catchAll]",
        "regex": "^\\/en\\/customers(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/en/en/users/[...user]",
        "regex": "^\\/en\\/en\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/en/fallback/[slug]",
        "regex": "^\\/en\\/fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/en/fallback-blocking/[slug]",
        "regex": "^\\/en\\/fallback-blocking(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/en/fr/users/[...user]",
        "regex": "^\\/en\\/fr\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/en/nl/users/[...user]",
        "regex": "^\\/en\\/nl\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/en/no-fallback/[slug]",
        "regex": "^\\/en\\/no-fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/en/users/[...user]",
        "regex": "^\\/en\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/en/[root]",
        "regex": "^\\/en(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/fallback/[slug]",
        "regex": "^\\/fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/fallback-blocking/[slug]",
        "regex": "^\\/fallback-blocking(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/fr/blog/[id]",
        "regex": "^\\/fr\\/blog(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/fr/customers/[customer]",
        "regex": "^\\/fr\\/customers(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/fr/customers/[customer]/profile",
        "regex": "^\\/fr\\/customers(?:\\/([^\\/#\\?]+?))\\/profile[\\/#\\?]?$"
      },
      {
        "route": "/fr/customers/[customer]/[post]",
        "regex": "^\\/fr\\/customers(?:\\/([^\\/#\\?]+?))(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/fr/customers/[...catchAll]",
        "regex": "^\\/fr\\/customers(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/fr/en/users/[...user]",
        "regex": "^\\/fr\\/en\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/fr/fallback/[slug]",
        "regex": "^\\/fr\\/fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/fr/fallback-blocking/[slug]",
        "regex": "^\\/fr\\/fallback-blocking(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/fr/fr/users/[...user]",
        "regex": "^\\/fr\\/fr\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/fr/nl/users/[...user]",
        "regex": "^\\/fr\\/nl\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/fr/no-fallback/[slug]",
        "regex": "^\\/fr\\/no-fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/fr/users/[...user]",
        "regex": "^\\/fr\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/fr/[root]",
        "regex": "^\\/fr(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/nl/blog/[id]",
        "regex": "^\\/nl\\/blog(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/nl/customers/[customer]",
        "regex": "^\\/nl\\/customers(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/nl/customers/[customer]/profile",
        "regex": "^\\/nl\\/customers(?:\\/([^\\/#\\?]+?))\\/profile[\\/#\\?]?$"
      },
      {
        "route": "/nl/customers/[customer]/[post]",
        "regex": "^\\/nl\\/customers(?:\\/([^\\/#\\?]+?))(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/nl/customers/[...catchAll]",
        "regex": "^\\/nl\\/customers(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/nl/en/users/[...user]",
        "regex": "^\\/nl\\/en\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/nl/fallback/[slug]",
        "regex": "^\\/nl\\/fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/nl/fallback-blocking/[slug]",
        "regex": "^\\/nl\\/fallback-blocking(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/nl/fr/users/[...user]",
        "regex": "^\\/nl\\/fr\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/nl/nl/users/[...user]",
        "regex": "^\\/nl\\/nl\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/nl/no-fallback/[slug]",
        "regex": "^\\/nl\\/no-fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/nl/users/[...user]",
        "regex": "^\\/nl\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
      },
      {
        "route": "/nl/[root]",
        "regex": "^\\/nl(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/no-fallback/[slug]",
        "regex": "^\\/no-fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      },
      {
        "route": "/[root]",
        "regex": "^(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
      }
    ],
    "ssr": {
      "dynamic": {
        "/[root]": {
          "file": "pages/[root].js",
          "regex": "^(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/blog/[id]": {
          "file": "pages/blog/[id].js",
          "regex": "^\\/blog(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/customers/[customer]": {
          "file": "pages/customers/[customer].js",
          "regex": "^\\/customers(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/customers/[customer]/[post]": {
          "file": "pages/customers/[customer]/[post].js",
          "regex": "^\\/customers(?:\\/([^\\/#\\?]+?))(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/customers/[customer]/profile": {
          "file": "pages/customers/[customer]/profile.js",
          "regex": "^\\/customers(?:\\/([^\\/#\\?]+?))\\/profile[\\/#\\?]?$"
        },
        "/fallback-blocking/[slug]": {
          "file": "pages/fallback-blocking/[slug].js",
          "regex": "^\\/fallback-blocking(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fallback/[slug]": {
          "file": "pages/fallback/[slug].js",
          "regex": "^\\/fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/no-fallback/[slug]": {
          "file": "pages/no-fallback/[slug].js",
          "regex": "^\\/no-fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/en/[root]": {
          "file": "pages/[root].js",
          "regex": "^\\/en(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/en/blog/[id]": {
          "file": "pages/blog/[id].js",
          "regex": "^\\/en\\/blog(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/en/customers/[customer]": {
          "file": "pages/customers/[customer].js",
          "regex": "^\\/en\\/customers(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/en/customers/[customer]/[post]": {
          "file": "pages/customers/[customer]/[post].js",
          "regex": "^\\/en\\/customers(?:\\/([^\\/#\\?]+?))(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/en/customers/[customer]/profile": {
          "file": "pages/customers/[customer]/profile.js",
          "regex": "^\\/en\\/customers(?:\\/([^\\/#\\?]+?))\\/profile[\\/#\\?]?$"
        },
        "/en/fallback-blocking/[slug]": {
          "file": "pages/fallback-blocking/[slug].js",
          "regex": "^\\/en\\/fallback-blocking(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/en/fallback/[slug]": {
          "file": "pages/fallback/[slug].js",
          "regex": "^\\/en\\/fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/en/no-fallback/[slug]": {
          "file": "pages/no-fallback/[slug].js",
          "regex": "^\\/en\\/no-fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/nl/[root]": {
          "file": "pages/[root].js",
          "regex": "^\\/nl(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/nl/blog/[id]": {
          "file": "pages/blog/[id].js",
          "regex": "^\\/nl\\/blog(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/nl/customers/[customer]": {
          "file": "pages/customers/[customer].js",
          "regex": "^\\/nl\\/customers(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/nl/customers/[customer]/[post]": {
          "file": "pages/customers/[customer]/[post].js",
          "regex": "^\\/nl\\/customers(?:\\/([^\\/#\\?]+?))(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/nl/customers/[customer]/profile": {
          "file": "pages/customers/[customer]/profile.js",
          "regex": "^\\/nl\\/customers(?:\\/([^\\/#\\?]+?))\\/profile[\\/#\\?]?$"
        },
        "/nl/fallback-blocking/[slug]": {
          "file": "pages/fallback-blocking/[slug].js",
          "regex": "^\\/nl\\/fallback-blocking(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/nl/fallback/[slug]": {
          "file": "pages/fallback/[slug].js",
          "regex": "^\\/nl\\/fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/nl/no-fallback/[slug]": {
          "file": "pages/no-fallback/[slug].js",
          "regex": "^\\/nl\\/no-fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fr/[root]": {
          "file": "pages/[root].js",
          "regex": "^\\/fr(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fr/blog/[id]": {
          "file": "pages/blog/[id].js",
          "regex": "^\\/fr\\/blog(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fr/customers/[customer]": {
          "file": "pages/customers/[customer].js",
          "regex": "^\\/fr\\/customers(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fr/customers/[customer]/[post]": {
          "file": "pages/customers/[customer]/[post].js",
          "regex": "^\\/fr\\/customers(?:\\/([^\\/#\\?]+?))(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fr/customers/[customer]/profile": {
          "file": "pages/customers/[customer]/profile.js",
          "regex": "^\\/fr\\/customers(?:\\/([^\\/#\\?]+?))\\/profile[\\/#\\?]?$"
        },
        "/fr/fallback-blocking/[slug]": {
          "file": "pages/fallback-blocking/[slug].js",
          "regex": "^\\/fr\\/fallback-blocking(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fr/fallback/[slug]": {
          "file": "pages/fallback/[slug].js",
          "regex": "^\\/fr\\/fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fr/no-fallback/[slug]": {
          "file": "pages/no-fallback/[slug].js",
          "regex": "^\\/fr\\/no-fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        }
      },
      "catchAll": {
        "/customers/[...catchAll]": {
          "file": "pages/customers/[...catchAll].js",
          "regex": "^\\/customers(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/en/customers/[...catchAll]": {
          "file": "pages/customers/[...catchAll].js",
          "regex": "^\\/en\\/customers(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/nl/customers/[...catchAll]": {
          "file": "pages/customers/[...catchAll].js",
          "regex": "^\\/nl\\/customers(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/fr/customers/[...catchAll]": {
          "file": "pages/customers/[...catchAll].js",
          "regex": "^\\/fr\\/customers(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        }
      },
      "nonDynamic": {
        "/async-page": "pages/async-page.js",
        "/customers": "pages/customers.js",
        "/customers/new": "pages/customers/new.js",
        "/erroredPage": "pages/erroredPage.js",
        "/": "pages/index.js",
        "/preview": "pages/preview.js",
        "/_error": "pages/_error.js",
        "/en/async-page": "pages/async-page.js",
        "/en/customers": "pages/customers.js",
        "/en/customers/new": "pages/customers/new.js",
        "/en/erroredPage": "pages/erroredPage.js",
        "/en": "pages/index.js",
        "/en/preview": "pages/preview.js",
        "/en/_error": "pages/_error.js",
        "/nl/async-page": "pages/async-page.js",
        "/nl/customers": "pages/customers.js",
        "/nl/customers/new": "pages/customers/new.js",
        "/nl/erroredPage": "pages/erroredPage.js",
        "/nl": "pages/index.js",
        "/nl/preview": "pages/preview.js",
        "/nl/_error": "pages/_error.js",
        "/fr/async-page": "pages/async-page.js",
        "/fr/customers": "pages/customers.js",
        "/fr/customers/new": "pages/customers/new.js",
        "/fr/erroredPage": "pages/erroredPage.js",
        "/fr": "pages/index.js",
        "/fr/preview": "pages/preview.js",
        "/fr/_error": "pages/_error.js"
      }
    },
    "html": {
      "nonDynamic": {
        "/en/404": "pages/en/404.html",
        "/nl/404": "pages/nl/404.html",
        "/fr/404": "pages/fr/404.html",
        "/en/500": "pages/en/500.html",
        "/nl/500": "pages/nl/500.html",
        "/fr/500": "pages/fr/500.html",
        "/en/terms": "pages/en/terms.html",
        "/nl/terms": "pages/nl/terms.html",
        "/fr/terms": "pages/fr/terms.html"
      },
      "dynamic": {
        "/en/users/[...user]": {
          "file": "pages/en/users/[...user].html",
          "regex": "^\\/en\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/nl/users/[...user]": {
          "file": "pages/nl/users/[...user].html",
          "regex": "^\\/nl\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/fr/users/[...user]": {
          "file": "pages/fr/users/[...user].html",
          "regex": "^\\/fr\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/en/en/users/[...user]": {
          "file": "pages/en/en/users/[...user].html",
          "regex": "^\\/en\\/en\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/en/nl/users/[...user]": {
          "file": "pages/en/nl/users/[...user].html",
          "regex": "^\\/en\\/nl\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/en/fr/users/[...user]": {
          "file": "pages/en/fr/users/[...user].html",
          "regex": "^\\/en\\/fr\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/nl/en/users/[...user]": {
          "file": "pages/nl/en/users/[...user].html",
          "regex": "^\\/nl\\/en\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/nl/nl/users/[...user]": {
          "file": "pages/nl/nl/users/[...user].html",
          "regex": "^\\/nl\\/nl\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/nl/fr/users/[...user]": {
          "file": "pages/nl/fr/users/[...user].html",
          "regex": "^\\/nl\\/fr\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/fr/en/users/[...user]": {
          "file": "pages/fr/en/users/[...user].html",
          "regex": "^\\/fr\\/en\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/fr/nl/users/[...user]": {
          "file": "pages/fr/nl/users/[...user].html",
          "regex": "^\\/fr\\/nl\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        },
        "/fr/fr/users/[...user]": {
          "file": "pages/fr/fr/users/[...user].html",
          "regex": "^\\/fr\\/fr\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        }
      }
    },
    "ssg": {
      "nonDynamic": {
        "/fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/fallback/[slug]",
          "dataRoute": "/_next/data/build-id/fallback/example-static-page.json"
        },
        "/no-fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/no-fallback/[slug]",
          "dataRoute": "/_next/data/build-id/no-fallback/example-static-page.json"
        },
        "/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/preview.json"
        },
        "/nl/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/nl/preview.json"
        },
        "/fr/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/fr/preview.json"
        },
        "/en": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/index.json"
        },
        "/nl": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/index.json"
        },
        "/fr": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/index.json"
        },
        "/en/fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/en/fallback/[slug]",
          "dataRoute": "/_next/data/build-id/en/fallback/example-static-page.json"
        },
        "/en/no-fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/en/no-fallback/[slug]",
          "dataRoute": "/_next/data/build-id/en/no-fallback/example-static-page.json"
        },
        "/en/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/en/preview.json"
        },
        "/en/nl/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/en/preview.json"
        },
        "/en/fr/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/en/preview.json"
        },
        "/en/en": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/en/index.json"
        },
        "/en/nl": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/en/index.json"
        },
        "/en/fr": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/en/index.json"
        },
        "/nl/fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/nl/fallback/[slug]",
          "dataRoute": "/_next/data/build-id/nl/fallback/example-static-page.json"
        },
        "/nl/no-fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/nl/no-fallback/[slug]",
          "dataRoute": "/_next/data/build-id/nl/no-fallback/example-static-page.json"
        },
        "/nl/nl/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/nl/preview.json"
        },
        "/nl/fr/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/nl/preview.json"
        },
        "/nl/en": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/nl/index.json"
        },
        "/nl/nl": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/nl/index.json"
        },
        "/nl/fr": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/nl/index.json"
        },
        "/fr/fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/fr/fallback/[slug]",
          "dataRoute": "/_next/data/build-id/fr/fallback/example-static-page.json"
        },
        "/fr/no-fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/fr/no-fallback/[slug]",
          "dataRoute": "/_next/data/build-id/fr/no-fallback/example-static-page.json"
        },
        "/fr/nl/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/fr/preview.json"
        },
        "/fr/fr/preview": {
          "initialRevalidateSeconds": 5,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/fr/preview.json"
        },
        "/fr/en": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/fr/index.json"
        },
        "/fr/nl": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/fr/index.json"
        },
        "/fr/fr": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/fr/index.json"
        }
      },
      "dynamic": {
        "/fallback-blocking/[slug]": {
          "routeRegex": "^/fallback\\-blocking/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/fallback-blocking/[slug].json",
          "fallback": null,
          "dataRouteRegex": "^/_next/data/build\\-id/fallback\\-blocking/([^/]+?)\\.json$"
        },
        "/fallback/[slug]": {
          "routeRegex": "^/fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/fallback/[slug].json",
          "fallback": "/fallback/[slug].html",
          "dataRouteRegex": "^/_next/data/build\\-id/fallback/([^/]+?)\\.json$"
        },
        "/no-fallback/[slug]": {
          "routeRegex": "^/no\\-fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/no-fallback/[slug].json",
          "fallback": false,
          "dataRouteRegex": "^/_next/data/build\\-id/no\\-fallback/([^/]+?)\\.json$"
        },
        "/en/fallback-blocking/[slug]": {
          "routeRegex": "^/en/fallback\\-blocking/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/en/fallback-blocking/[slug].json",
          "fallback": null,
          "dataRouteRegex": "^/_next/data/build\\-id/fallback\\-blocking/([^/]+?)\\.json$"
        },
        "/en/fallback/[slug]": {
          "routeRegex": "^/en/fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/en/fallback/[slug].json",
          "fallback": "/en/fallback/[slug].html",
          "dataRouteRegex": "^/_next/data/build\\-id/fallback/([^/]+?)\\.json$"
        },
        "/en/no-fallback/[slug]": {
          "routeRegex": "^/en/no\\-fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/en/no-fallback/[slug].json",
          "fallback": false,
          "dataRouteRegex": "^/_next/data/build\\-id/no\\-fallback/([^/]+?)\\.json$"
        },
        "/nl/fallback-blocking/[slug]": {
          "routeRegex": "^/nl/fallback\\-blocking/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/nl/fallback-blocking/[slug].json",
          "fallback": null,
          "dataRouteRegex": "^/_next/data/build\\-id/fallback\\-blocking/([^/]+?)\\.json$"
        },
        "/nl/fallback/[slug]": {
          "routeRegex": "^/nl/fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/nl/fallback/[slug].json",
          "fallback": "/nl/fallback/[slug].html",
          "dataRouteRegex": "^/_next/data/build\\-id/fallback/([^/]+?)\\.json$"
        },
        "/nl/no-fallback/[slug]": {
          "routeRegex": "^/nl/no\\-fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/nl/no-fallback/[slug].json",
          "fallback": false,
          "dataRouteRegex": "^/_next/data/build\\-id/no\\-fallback/([^/]+?)\\.json$"
        },
        "/fr/fallback-blocking/[slug]": {
          "routeRegex": "^/fr/fallback\\-blocking/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/fr/fallback-blocking/[slug].json",
          "fallback": null,
          "dataRouteRegex": "^/_next/data/build\\-id/fallback\\-blocking/([^/]+?)\\.json$"
        },
        "/fr/fallback/[slug]": {
          "routeRegex": "^/fr/fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/fr/fallback/[slug].json",
          "fallback": "/fr/fallback/[slug].html",
          "dataRouteRegex": "^/_next/data/build\\-id/fallback/([^/]+?)\\.json$"
        },
        "/fr/no-fallback/[slug]": {
          "routeRegex": "^/fr/no\\-fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id/fr/no-fallback/[slug].json",
          "fallback": false,
          "dataRouteRegex": "^/_next/data/build\\-id/no\\-fallback/([^/]+?)\\.json$"
        }
      }
    }
  },
  "publicFiles": {
    "/favicon.ico": "favicon.ico",
    "/file with spaces.json": "file with spaces.json",
    "/manifest.json": "manifest.json"
  },
  "trailingSlash": false,
  "domainRedirects": {
    "example.com": "https://www.example.com"
  }
}
