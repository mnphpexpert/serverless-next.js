{
  "buildId": "build-id2",
  "pages": {
    "ssr": {
      "dynamic": {
        "/:root": {
          "file": "pages/[root].js",
          "regex": "^/([^/]+?)(?:/)?$"
        },
        "/blog/:id": {
          "file": "pages/blog/[id].js",
          "regex": "^/blog/([^/]+?)(?:/)?$"
        },
        "/customers/:customer": {
          "file": "pages/customers/[customer].js",
          "regex": "^/customers/([^/]+?)(?:/)?$"
        },
        "/customers/:customer/profile": {
          "file": "pages/customers/[customer]/profile.js",
          "regex": "^/customers/([^/]+?)/profile(?:/)?$"
        },
        "/customers/:customer/:post": {
          "file": "pages/customers/[customer]/[post].js",
          "regex": "^/customers/([^/]+?)/([^/]+?)(?:/)?$"
        },
        "/customers/:catchAll*": {
          "file": "pages/customers/[...catchAll].js",
          "regex": "^/customers(?:/((?:[^/#?]+?)(?:/(?:[^/#?]+?))*))?[/#?]?$"
        }
      },
      "nonDynamic": {
        "/": "pages/index.js",
        "/customers": "pages/customers/index.js",
        "/customers/new": "pages/customers/new.js",
        "/api/getCustomers": "pages/api/getCustomers.js",
        "/_error": "pages/_error.js",
        "/404": "pages/404.html"
      }
    },
    "html": {
      "nonDynamic": {
        "/": "pages/index.html",
        "/terms": "pages/terms.html",
        "/404": "pages/404.html"
      },
      "dynamic": {
        "/users/:user": {
          "file": "pages/users/[user].html",
          "regex": "^/users/([^/]+?)(?:/)?$"
        },
        "/users/:user*": {
          "file": "pages/users/[...user].html",
          "regex": "^/users(?:/((?:[^/#?]+?)(?:/(?:[^/#?]+?))*))?[/#?]?$"
        },
        "/:username/:id": {
          "file": "pages/[username]/[id].html",
          "regex": "^/([^/]+?)/([^/]+?)(?:/)?$"
        }
      }
    },
    "ssg": {
      "nonDynamic": {
        "/": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/test-build-id/index.json"
        },
        "/tests/prerender-manifest/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/tests/prerender-manifest/[staticPageName]",
          "dataRoute": "/_next/data/test-build-id/tests/prerender-manifest/example-static-page.json"
        },
        "/preview": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id/preview.json"
        }
      },
      "dynamic": {
        "/tests/prerender-manifest/[staticPageName]": {
          "routeRegex": "^/tests/prerender-manifest/(?:([^/]+?))/?$",
          "dataRoute": "/_next/data/test-build-id/tests/prerender-manifest/[staticPageName].json",
          "fallback": false,
          "dataRouteRegex": "^/_next/data/test-build-id/tests/prerender-manifest/(?:([^/]+?)).json/?$"
        },
        "/tests/prerender-manifest-fallback/[fallback]": {
          "routeRegex": "^/tests/prerender-manifest-fallback/(?:([^/]+?))/?$",
          "dataRoute": "/_next/data/test-build-id/tests/prerender-manifest-fallback/[staticPageName].json",
          "fallback": "/tests/prerender-manifest-fallback/[fallback].html",
          "dataRouteRegex": "^/_next/data/test-build-id/tests/prerender-manifest-fallback/(?:([^/]+?)).json/?$"
        }
      }
    }
  },
  "publicFiles": {
    "/favicon.ico": "favicon.ico",
    "/manifest.json": "manifest.json"
  },
  "trailingSlash": false,
  "domainRedirects": {
    "example.com": "https://www.example.com"
  }
}
